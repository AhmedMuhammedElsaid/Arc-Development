[{"E:\\Learning\\arc-development\\src\\reportWebVitals.js":"1","E:\\Learning\\arc-development\\src\\index.js":"2","E:\\Learning\\arc-development\\src\\components\\App.js":"3","E:\\Learning\\arc-development\\src\\components\\ui\\Header.js":"4","E:\\Learning\\arc-development\\src\\components\\ui\\Theme.js":"5","E:\\Learning\\arc-development\\src\\components\\ui\\ServicesOptions.js":"6","E:\\Learning\\arc-development\\src\\components\\ui\\Footer.js":"7","E:\\Learning\\arc-development\\src\\animations\\landinganimation\\data.js":"8","E:\\Learning\\arc-development\\src\\components\\LandingPage.js":"9"},{"size":362,"mtime":1606764806791,"results":"10","hashOfConfig":"11"},{"size":442,"mtime":1611168549620,"results":"12","hashOfConfig":"11"},{"size":1654,"mtime":1611674627902,"results":"13","hashOfConfig":"11"},{"size":8444,"mtime":1612369464086,"results":"14","hashOfConfig":"11"},{"size":1445,"mtime":1612992716605,"results":"15","hashOfConfig":"11"},{"size":3643,"mtime":1611506745043,"results":"16","hashOfConfig":"11"},{"size":6787,"mtime":1611628687696,"results":"17","hashOfConfig":"11"},{"size":3890,"mtime":1566170478000,"results":"18","hashOfConfig":"11"},{"size":11659,"mtime":1612993805402,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jtjj6r",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Learning\\arc-development\\src\\reportWebVitals.js",[],"E:\\Learning\\arc-development\\src\\index.js",[],"E:\\Learning\\arc-development\\src\\components\\App.js",[],"E:\\Learning\\arc-development\\src\\components\\ui\\Header.js",["39"],"E:\\Learning\\arc-development\\src\\components\\ui\\Theme.js",[],"E:\\Learning\\arc-development\\src\\components\\ui\\ServicesOptions.js",["40"],"import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\r\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\r\nimport Grow from \"@material-ui/core/Grow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Popper from \"@material-ui/core/Popper\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport MenuList from \"@material-ui/core/MenuList\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { options } from \"./Header\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  menu: {\r\n    backgroundColor: theme.palette.common.blue,\r\n    color: \"white\",\r\n    borderRadius: \"0\",\r\n  },\r\n  menuItem: {\r\n    ...theme?.palette?.typography?.tab,\r\n    opacity: \".7\",\r\n    // marginTop:'-2rem',\r\n    \"&:hover\": { opacity: \"1\" },\r\n  },\r\n}));\r\nexport default function SplitButton({\r\n  setValue,\r\n  value,\r\n  setSelectedIndex,\r\n  selectedIndex,\r\n}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const anchorRef = React.useRef(null);\r\n  const handleMenuItemClick = (event, index) => {\r\n    console.log(index);\r\n    setSelectedIndex(index);\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleToggle = () => {\r\n    setOpen((prevOpen) => !prevOpen);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    if (anchorRef.current && anchorRef.current.contains(event.target)) {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        ref={anchorRef}\r\n        aria-label=\"split button\"\r\n        style={{ opacity: 0, zIndex: \"10\" }}\r\n      >\r\n        <Button\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          aria-controls={open ? \"split-button-menu\" : undefined}\r\n          aria-expanded={open ? \"true\" : undefined}\r\n          aria-label=\"select merge strategy\"\r\n          aria-haspopup=\"menu\"\r\n          onClick={handleToggle}\r\n          style={{ width: \"111px\", height: \"40px\" }}\r\n        >\r\n          <ArrowDropDownIcon />\r\n        </Button>\r\n      </ButtonGroup>\r\n      <Popper\r\n        open={open}\r\n        anchorEl={anchorRef.current}\r\n        role={undefined}\r\n        transition\r\n        disablePortal\r\n      >\r\n        {({ TransitionProps, placement }) => (\r\n          <Grow\r\n            {...TransitionProps}\r\n            style={{\r\n              transformOrigin:\r\n                placement === \"bottom\" ? \"center top\" : \"center bottom\",\r\n            }}\r\n          >\r\n            <Paper>\r\n              <ClickAwayListener  onClickAway={handleClose}>\r\n                <MenuList   className={classes.menu} id=\"split-button-menu\">\r\n                  {options.map((option, index) => (\r\n                    <MenuItem\r\n                      component={Link}\r\n                      to={option.path}\r\n                      key={index}\r\n                      \r\n                      className={classes.menuItem}\r\n                      selected={index === selectedIndex && value === 1}\r\n                      onClick={(event) => {\r\n                        handleMenuItemClick(event, index);\r\n                        setValue(1);\r\n                        handleClose(event);\r\n                      }}\r\n                    >\r\n                      {option.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                </MenuList>\r\n              </ClickAwayListener>\r\n            </Paper>\r\n          </Grow>\r\n        )}\r\n      </Popper>\r\n    </>\r\n  );\r\n}\r\n","E:\\Learning\\arc-development\\src\\components\\ui\\Footer.js",[],"E:\\Learning\\arc-development\\src\\animations\\landinganimation\\data.js",["41"],"E:\\Learning\\arc-development\\src\\components\\LandingPage.js",[],{"ruleId":"42","severity":1,"message":"43","line":163,"column":6,"nodeType":"44","endLine":163,"endColumn":28,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":8,"nodeType":"48","messageId":"49","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":7,"column":1,"nodeType":"52","endLine":191,"endColumn":3},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'routes'. Either include it or remove the dependency array.","ArrayExpression",["53"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"54","fix":"55"},"Update the dependencies array to be: [value, selectedIndex, routes]",{"range":"56","text":"57"},[4079,4101],"[value, selectedIndex, routes]"]